sandbox(1) -- sandbox entire UNIX servers
=========================================

## SYNOPSIS

`sandbox` [_command_] [_options_][_..._]  

## DESCRIPTION

`sandbox` programs are used to sandbox entire UNIX servers to avoid polluting the base sandbox (the actual server) when doing experimental or invasive work.  Sandboxes stop short of full virtualization and as such are quick to create, use, and destroy.  Each sandbox contains a deep copy of your home directory and a shallow copy of the rest of the server's filesystem.  Packages can be installed as usual, configuration can be changed, and services can be started within each sandbox.  It is, however, possible for network ports to conflict between sandboxes.

* `sandbox-list`(1):
  List all sandboxes.
* `sandbox-which`(1):
  Print the name of the current sandbox.
* `sandbox-create`(1):
  Create a new sandbox.
* `sandbox-clone`(1):
  Clone an existing sandbox.
* `sandbox-use`(1):
  Run commands in a sandbox.
* `sandbox-mark`(1):
  Mark arbitrary files for inclusion in a blueprint.
* `sandbox-destroy`(1):
  Destroy a sandbox.

## EXAMPLES

Create a sandbox called _mq-worker_ and install the Ruby gems necessary to work from a message queue.  Then clone that sandbox to another called _mq-broker_ and install the rabbitmq-server AMQP broker and unlock its configuration file so we can modify it later.

	sandbox create mq-worker
	sandbox use mq-worker
	sudo gem install amqp carrot
	exit
	sandbox clone mq-worker mq-broker
	sandbox use mq-broker -c "sudo apt-get -y install rabbitmq-server"
	sandbox unlock mq-broker /etc/rabbitmq/rabbitmq.conf

## THEME SONG

The Flaming Lips - "The W.A.N.D. (The Will Always Negates Defeat)"

## AUTHOR

Richard Crowley <richard@devstructure.com>

## SEE ALSO

`sandbox-list`(1), `sandbox-which`(1), `sandbox-create`(1), `sandbox-clone`(1), `sandbox-use`(1), and `sandbox-destroy`(1).
